
Marriott Tech Accelerator (ANSR)
Questions asked (Interview : round 1) :

1. Work manager v job scheduler
2. Kotlin Coroutine scopes
3. How to manage communication between multiple fragments
4. Jetpack components
5. How will you debug/fix exception that is effecting prod user.
6. How will you fix a feature that uses lots of fragment and having lots of state management issues.
7. What are all the architecture you have worked with ?
8. Kotlin scoped functions
9. Find out the missing elements in a 0-n Consecutive sequence. 0,1,2,3,4,6,7,9,10,11 | return should be 5,8 as they are missing.


Company 2 - Stryker :

Round 1 :
1. lateinit vs lazy.
2. by keyword in lazy declaration.
3. Kotlin delegates.
4. Coroutine Scopes.
5. Exception handling in coroutine scope.
6. SOLID principles ? What does D stand for in SOLID
7. MVVM how does it help with separation of concerns ?
8. Problem with Navigation3 lib / Deep-linking in Compose ?
9. Sonar Cube ?

Round 2 :

1. What is webRTC ? What are STUN/TURN Servers ?
2. DSA : Reverse linked list in pair : 1->2->3->4 = 2->1->4->3
3. Write pseudocode - a flow is emitting values from 1..100, we only want to update the ui for even values.
4. SOLID principles - What does D stand for ?
5. Unit test case Scenario : we are writing test cases for our viewModel class, in our viewmodel
   we are using context to get some resource. How can I write test case for this function ?
   How will you get context for your test case ?

Company 3 - 7E :

Round 1 (Oct)
1. Leet Code : https://leetcode.com/problems/product-of-array-except-self/description/
2. Lazy vs lateinit in kotlin.
3. What is Polymorphism in OOPS.
4. LaunchEffects in compose.
5. How kotlin helps with null safety.
6. What is android manifest ?
7. Row's, Column's, Box's in Compose Layouts.
8. What will happen if I declare a var as lazy but don't init it and try to use it.
9. Higher Order functions.

Round 2 (Oct - 23)
1. Leet Code : https://leetcode.com/problems/longest-substring-without-repeating-characters/description/
2. What are the Core OOPS principles - explain using real life examples ?
3. Can we create an activity without attaching any Ui component with it ?
4. If we have 2 fragment getting shown in the same screen how can you share a state between them ?
5. How will you solve a problem where internet connectivity is very poor and you need to make sure
each and every data is synced with backend without miss. How will you design the architecture.
6. What component you will use in jetpack compose if you want to show 2 widgets on top of each other.
7. How will you make sure that your screen survives configuration changes - like screen rotation.
8. What you understand by ANR.
9. Which life cycle method of a fragment gets called only once during lifecycle of a fragment ?
10. What are most challenging task you have tackled in your first company ?


Company 4 - cs :

Round 1 (Oct-2025)
1. WorkManager when & why to use them.
2. Coroutines - How do you make sure 2 suspending functions are executing synchronously - one after another.
3. What are the advantages of Kotlin over Java.
4. Extension functions in kotlin.
5. companion objects in kotlin.
6. In Retrofit how do you send headers payload.
7. What are interceptors ?
8. How do you implement a retry mechanism in your network/retrofit layer.
9. Lazy vs lateinit in kotlin.
10. What does proguard/R8 do ?
11. What are the needs of build favours ?
12. What is SSL pinning ? -- Need to check
13. Difference between Enums vs Sealed class.
14. Kotlin Flow, how they are better than LiveData.
15. MutableStateFlow vs MutableSharedFlow.
16. Dependency injections, why they are needed ?
17. How do you make your app more secure?
18. Database migration ? How you do it give a brief.

Round 2 : (same day) - Machine Coding (30min)
Create a task list application. having an edit text and add button.
You can make a list of tasks using the add button. and display it rightt below the edit text
you can makr the the task as completed from list view and also delete the task.

Round 3 : (same day) - Managerial



Company 5 - logic :

Round 1 (Oct - 2025)
1. Create a sealed class Result with Success,Failure,Loading. Write a suspending function and return Result as return
type. Call that suspend function.
2. Compose - remember{}, rememberSavable{} ??
3. How do you manage state in a compose base app.
4. what are the architectures you are familier with. What is MVVM ?
5. What are coroutines ? How to use them.
6. RxJava vs KotlinFlow library.

Company 6 - ool :

Round 1 (27 Oct - 2025)
1. Problem-Solving :
Question: Decode Message Using Encoding Tree
You are given an Encoding Tree and an encoded string.
Each node in the tree contains:

A value (used for traversal)
An optional decodedValue (only present in leaf nodes)
A list of child nodes.

The encoding tree defines how sequences of node labels correspond to decoded text.
You need to implement a method decodeMessage(Tree root, String encodedMsg) which decodes the encoded
string using the given tree, and returns the full decoded message.

Additionally, implement an iterator method next() that returns one character at a time from the decoded
message (e.g., 'H', 'E', 'L', 'L', 'O', ' ', 'W', 'O', 'R', 'L', 'D').

                  (Z)
                /  |   \
              A    D     E
             /         /   \
            B         F       G
           /       /  |  \    / \
          C       H   I   J  K   L

         ABC - "HE"
         D - "L"
         EFH - "O"
         EFI - " "
         EFJ - "W"
         EGK - "R"
         EGL - "R"

Encoding Tree Above : (1st parameter)
Encoded String : ABCDDEFHEFIEFJEFHEGKDEGL (2nd parameter)
Decoded String : HELLO WORLD. (Expected output)